[tool.poetry]
name = "xdrlib2"
version = "v0.0.0"
description = "A replacement for the xdrlib package in Python's standard library"
authors = ["Ruud de Jong <rhjdjong@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers"
]

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.group.dev.dependencies]
bandit = { extras = ["toml"], version = "^1.7.5" }
black = { version = "^23.7.0" }
isort = "^5.12.0"
mypy = "^1.4.1"
pytest = "^7.4.0"
refurb = "^1.17.0"
ruff = "^0.0.292"
pytest-cov = "^4.1.0"

[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
sphinx = "^7.1.1"
myst-parser = "^2.0.0"
sphinx-mdinclude = "^0.5.3"

[tool.poetry-dynamic-versioning]
enable = true

[tool.pytest.ini_options]
addopts = "-v --cov --cov-report term-missing:skip-covered --cov-report xml --junitxml=report.xml"

[tool.bandit]
exclude_dirs = [".venv", ".idea"]
skips = ["B101"]

[tool.coverage.run]
branch = true
source = ["xdrlib2"]
omit = ["tests/*"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

[tool.refurb]
python_version = "3.11"

[tool.ruff]
line-length = 120

[tool.mypy]
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true
strict_concatenate = true

[tool.isort]
profile = "black"
line_length = 120

[tool.black]
line-length = 120
target-version = ['py311']

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
